var e=require("anycluster-client"),t=require("@googlemaps/js-api-loader");function r(e,t,r,o){Object.defineProperty(e,t,{get:r,set:o,enumerable:!0,configurable:!0})}r(module.exports,"ClusterMethod",()=>$13155a20c7fd0c4b$re_export$ClusterMethod),r(module.exports,"AnyclusterGoogle",()=>o);class o extends e.AnyclusterClient{constructor(e,r,o,s,a){let i=new t.Loader({apiKey:e,version:"monthly",libraries:["marker","drawing"]});i.load().then(e=>{this.google=e}).catch(e=>{}),super(r,o,s,a),this.currentZoom=this.getZoom()}removeArea(){this.map.data.forEach(e=>{this.map.data.remove(e)})}addArea(e){this.map.data.addGeoJson(e)}createClusterLayers(){this.map.data.setStyle(e=>{if("cell"==e.getProperty("clustertype")){let t=this.roundMarkerCount(e.getProperty("count")),r=this.gridStrokeColors[t],o=this.gridStrokeColors[t];return{fillColor:r,strokeWeight:1,strokeColor:o}}}),this.map.data.addListener("click",e=>{let t=e.feature;("cell"==t.clustertype||"marker"==t.clustertype)&&(this.getZoom()>=this.maxZoom||1==t.count?this.onMarkerFinalClick(t):this.markerClickFunction(t.x,t.y))})}createAreaLayer(){}getMarkerIcon(e){let t=this.selectPinIcon(e),r=new this.google.maps.Size(t.size[0],t.size[1]),o=new this.google.maps.Point(t.anchor[0],t.anchor[1]),s={url:t.url,size:r,anchor:o};return s}drawMarker(t){let r=this.getMarkerIcon(t),o={map:this.map,position:{lat:t.center.y,lng:t.center.x},icon:r};this.iconType===e.IconType.exact&&t.count>1&&(o.label={text:t.count.toString(),color:"#FFF",fontWeight:"bold"});let s=new this.google.maps.Marker(o);s=this.setMarkerProps(s,t),this.addMarkerClickListener(s),this.markerList.push(s)}drawCell(e){let t=e.count;if(1==t)this.drawMarker(e);else{let r={type:"Feature",geometry:e.geojson,properties:{clustertype:"cell",x:e.center.x,y:e.center.y,count:t,geojson:e.geojson}},o=this.map.data.addGeoJson(r)[0];o.x=e.center.x,o.y=e.center.y,o.count=t,o.geojson=r,o.clustertype="cell"}}removeAllMarkers(){for(let e=0;e<this.markerList.length;e++)this.markerList[e].setMap(null);this.map.data.forEach(e=>{"cell"==e.clustertype&&this.map.data.remove(e)}),this.markerList.length=0}addMapEventListeners(){this.map.addListener("dragend",()=>this.getClusters()),this.map.addListener("zoom_changed",()=>{this.removeAllMarkers(),this.getClusters()})}getViewport(){let e=this.map.getBounds(),t=e.getNorthEast(),r=e.getSouthWest(),o={left:r.lng(),right:t.lng(),top:t.lat(),bottom:r.lat()};return o}getZoom(){return this.map.getZoom()}setZoom(e){this.map.setZoom(e)}setMap(e,t,r){this.map.setOptions({center:{lat:t,lng:e},zoom:r})}addMarkerClickListener(e){let t=this.getZoom();t>=13||1==e.count?e.addListener("click",t=>{this.onMarkerFinalClick(e)}):e.addListener("click",t=>{this.markerClickFunction(e.x,e.y)})}}
//# sourceMappingURL=main.js.map
