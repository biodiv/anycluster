var e=require("anycluster-client"),t=require("leaflet");function r(e,t,r,a){Object.defineProperty(e,t,{get:r,set:a,enumerable:!0,configurable:!0})}r(module.exports,"ClusterMethod",()=>$daa68199c6ecee0a$re_export$ClusterMethod),r(module.exports,"AnyclusterLeaflet",()=>a);class a extends e.AnyclusterClient{constructor(e,t,r,a){super(e,t,r,a),this.currentZoom=this.getZoom()}removeArea(){this.map.hasOwnProperty("areaLayer")&&this.map.areaLayer.clearLayers()}addArea(e){this.map.hasOwnProperty("areaLayer")||this.createAreaLayer(),t.geoJSON(e,{style:{color:"red"}}).addTo(this.map.areaLayer)}createClusterLayers(){let e=t.layerGroup().addTo(this.map);this.map.kmeansLayer=e;let r=t.layerGroup().addTo(this.map);this.map.gridClusterLayer=r}createAreaLayer(){let e=t.layerGroup().addTo(this.map);this.map.areaLayer=e}getMarkerIcon(e){let r=this.selectPinIcon(e),a=t.icon({iconUrl:r.url,iconSize:r.size,iconAnchor:r.anchor,popupAnchor:r.popupAnchor});return a}drawMarker(e){let r=this.getMarkerIcon(e),a=t.latLng(e.center.y,e.center.x),s=t.marker(a,{icon:r});s=this.setMarkerProps(s,e),this.addMarkerClickListener(s),s.addTo(this.map.kmeansLayer),this.markerList.push(s)}drawCell(e){let r=e.count;if(1==r)this.drawMarker(e);else{let a=t.latLng(e.center.y,e.center.x),s={type:"Feature",count:r,geometry:e.geojson,properties:{count:r}},o=this.roundMarkerCount(r),i=this.gridFillColors[o],l=this.gridStrokeColors[o],n=t.geoJSON(s,{style:{color:l,stroke:!0,fillColor:i,weight:1,fillOpacity:1}});n.latitude=a.lat,n.longitude=a.lng,n.x=a.lng,n.y=a.lat,n.count=r,n.geojson=s,this.addMarkerClickListener(n),n.addTo(this.map.gridClusterLayer)}}removeAllMarkers(){this.map.kmeansLayer.clearLayers(),this.map.hasOwnProperty("gridClusterLayer")&&this.map.gridClusterLayer.clearLayers(),this.markerList.length=0}addMapEventListeners(){this.map.addEventListener("moveend",e=>this.getClusters()),this.map.addEventListener("zoomend",e=>this.removeAllMarkers())}getViewport(){let e=this.map.getBounds();if(e.isValid()){let t={left:e.getSouthWest().wrap().lng,top:e.getNorthEast().wrap().lat,right:e.getNorthEast().wrap().lng,bottom:e.getSouthWest().wrap().lat};return t}throw Error("invalid viewport")}getZoom(){return this.map.getZoom()}setZoom(e){this.map.setZoom(e)}setMap(e,r,a){let s=t.latLng(r,e);this.map.setView(s,a)}addMarkerClickListener(e){let t=this.getZoom();t>=this.maxZoom||1==e.count?e.on("click",t=>{this.onMarkerFinalClick(e)}):e.on("click",t=>{this.markerClickFunction(e.x,e.y)})}}
//# sourceMappingURL=main.js.map
