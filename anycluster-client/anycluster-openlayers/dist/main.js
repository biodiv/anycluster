var e=require("anycluster-client"),t=require("ol/layer/Vector"),r=require("ol/source/Vector"),a=require("ol/style"),s=require("ol/format/GeoJSON"),i=require("ol/Feature"),o=require("ol/geom/Point");function l(e,t,r,a){Object.defineProperty(e,t,{get:r,set:a,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}l(module.exports,"ClusterMethod",()=>$b0d4e62e8aa64baf$re_export$ClusterMethod),l(module.exports,"AnyclusterOpenLayers",()=>u);class u extends e.AnyclusterClient{constructor(e,t,r,a){super(e,t,r,a),this.currentZoom=this.getZoom()}removeArea(){this.map.hasOwnProperty("areaLayer")&&this.map.areaLayer.getSource().clear()}getAreaStyle(e,t){let r=new a.Style({stroke:new a.Stroke({color:"rgba(255, 0, 0, 1)",width:2}),fill:new a.Fill({color:"rgba(255, 0, 0, .3)"})});return r}addArea(e){this.map.hasOwnProperty("areaLayer")||this.createAreaLayer();let t=new(n(s))({featureProjection:"EPSG:3857"}).readFeatures(e);this.map.areaLayer.getSource().addFeatures(t)}createClusterLayers(){let e=new(n(t))({source:new(n(r)),style:this.getCellStyle.bind(this)});this.map.addLayer(e),this.map.gridClusterLayer=e;let a=new(n(t))({source:new(n(r))});this.map.addLayer(a),this.map.kmeansLayer=a,this.map.on("click",e=>{let t=!1;this.map.forEachFeatureAtPixel(e.pixel,e=>{!1==t&&("cell"==e.clustertype||"marker"==e.clustertype)&&(t=!0,this.getZoom()>=this.maxZoom||1==e.count?this.onMarkerFinalClick(e):this.markerClickFunction(e.x,e.y))})}),this.map.on("pointermove",e=>{let t=this.map.getEventPixel(e.originalEvent),r=this.map.hasFeatureAtPixel(t);this.map.getViewport().style.cursor=r?"pointer":""})}createAreaLayer(){let e=new(n(t))({source:new(n(r)),style:this.getAreaStyle.bind(this)}),a=this.map.getLayers();a.insertAt(2,e),this.map.areaLayer=e}getMarkerIcon(e){let t=this.selectPinIcon(e),r=new a.Icon({anchor:t.relativeAnchor,crossOrigin:"anonymous",src:t.url,imgSize:t.size,size:t.size}),s=new a.Style({image:r});return s}drawMarker(e){let t=this.getMarkerIcon(e),r=new(n(o))([e.center.x,e.center.y]),a=new(n(i))(r);a.setStyle(t);let s=this.setMarkerProps(a,e);s.clustertype="marker",this.map.kmeansLayer.getSource().addFeature(s),this.markerList.push(s)}getCellStyle(e,t){let r=this.roundMarkerCount(e.count),s=this.gridFillColors[r],i=this.gridStrokeColors[r],o=new a.Style({stroke:new a.Stroke({color:i,width:2}),fill:new a.Fill({color:s})});return o}drawCell(e){let t=e.count;if(1==t)this.drawMarker(e);else{let t={type:"Feature",geometry:e.geojson},r=new(n(s))().readFeature(t),a=this.setMarkerProps(r,e);a.clustertype="cell",this.map.gridClusterLayer.getSource().addFeature(a)}}removeAllMarkers(){this.map.kmeansLayer.getSource().clear(),this.map.hasOwnProperty("gridClusterLayer")&&this.map.gridClusterLayer.getSource().clear(),this.markerList.length=0}addMapEventListeners(){this.map.addEventListener("moveend",e=>{let t=this.getZoom();t!=this.currentZoom&&(this.removeAllMarkers(),this.currentZoom=t),this.getClusters()})}getViewport(){let e=this.map.getView(),t=e.calculateExtent(this.map.getSize()),r=t[0],a=t[1],s=t[2],i=t[3];return{left:r,top:i,right:s,bottom:a}}getZoom(){let e=this.map.getView();return e.getZoom()}setZoom(e){this.map.setZoom(e)}setMap(e,t,r){let a=this.map.getView();a.animate({zoom:r,center:[e,t],duration:500})}}
//# sourceMappingURL=main.js.map
