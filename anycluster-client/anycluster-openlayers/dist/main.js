var e=require("anycluster-client"),t=require("ol/layer/Vector"),r=require("ol/source/Vector"),a=require("ol/style"),s=require("ol/format/GeoJSON"),o=require("ol/Feature"),i=require("ol/geom/Point");function n(e,t,r,a){Object.defineProperty(e,t,{get:r,set:a,enumerable:!0,configurable:!0})}function l(e){return e&&e.__esModule?e.default:e}n(module.exports,"ClusterMethod",(()=>$b0d4e62e8aa64baf$re_export$ClusterMethod)),n(module.exports,"AnyclusterOpenLayers",(()=>c));class c extends e.AnyclusterClient{constructor(e,t,r,a){super(e,t,r,a),this.currentZoom=this.getZoom()}removeArea(){this.map.hasOwnProperty("areaLayer")&&this.map.areaLayer.getSource().clear()}getAreaStyle(e,t){return new(0,a.Style)({stroke:new(0,a.Stroke)({color:"rgba(255, 0, 0, 1)",width:2}),fill:new(0,a.Fill)({color:"rgba(255, 0, 0, .3)"})})}addArea(e){this.map.hasOwnProperty("areaLayer")||this.createAreaLayer();const t=new(l(s))({featureProjection:"EPSG:3857"}).readFeatures(e);this.map.areaLayer.getSource().addFeatures(t)}createClusterLayers(){const e=new(l(t))({source:new(l(r)),style:this.getCellStyle.bind(this)});this.map.addLayer(e),this.map.gridClusterLayer=e;const a=new(l(t))({source:new(l(r))});this.map.addLayer(a),this.map.kmeansLayer=a,this.map.on("click",(e=>{let t=!1;this.map.forEachFeatureAtPixel(e.pixel,(e=>{if(0==t&&("cell"==e.clustertype||"marker"==e.clustertype)){t=!0,this.getZoom()>=13||1==e.count?this.onMarkerFinalClick(e):this.markerClickFunction(e.x,e.y)}}))})),this.map.on("pointermove",(e=>{let t=this.map.getEventPixel(e.originalEvent),r=this.map.hasFeatureAtPixel(t);this.map.getViewport().style.cursor=r?"pointer":""}))}createAreaLayer(){const e=new(l(t))({source:new(l(r)),style:this.getAreaStyle.bind(this)});this.map.getLayers().insertAt(2,e),this.map.areaLayer=e}getMarkerIcon(e){const t=this.selectPinIcon(e),r=new(0,a.Icon)({anchor:t.relativeAnchor,crossOrigin:"anonymous",src:t.url,imgSize:t.size,size:t.size});return new(0,a.Style)({image:r})}drawMarker(e){const t=this.getMarkerIcon(e),r=new(l(i))([e.center.x,e.center.y]);let a=new(l(o))(r);a.setStyle(t);let s=this.setMarkerProps(a,e);s.clustertype="marker",this.map.kmeansLayer.getSource().addFeature(s),this.markerList.push(s)}getCellStyle(e,t){const r=this.roundMarkerCount(e.count),s=this.gridFillColors[r],o=this.gridStrokeColors[r];return new(0,a.Style)({stroke:new(0,a.Stroke)({color:o,width:2}),fill:new(0,a.Fill)({color:s})})}drawCell(e){if(1==e.count)this.drawMarker(e);else{const t={type:"Feature",geometry:e.geojson};let r=(new(l(s))).readFeature(t),a=this.setMarkerProps(r,e);a.clustertype="cell",this.map.gridClusterLayer.getSource().addFeature(a)}}removeAllMarkers(){this.map.kmeansLayer.getSource().clear(),this.map.hasOwnProperty("gridClusterLayer")&&this.map.gridClusterLayer.getSource().clear(),this.markerList.length=0}addMapEventListeners(){this.map.addEventListener("moveend",(e=>{let t=this.getZoom();t!=this.currentZoom&&(this.removeAllMarkers(),this.currentZoom=t),this.getClusters()}))}getViewport(){const e=this.map.getView().calculateExtent(this.map.getSize()),t=e[0],r=e[1],a=e[2];return{left:t,top:e[3],right:a,bottom:r}}getZoom(){return this.map.getView().getZoom()}setZoom(e){this.map.setZoom(e)}setMap(e,t,r){this.map.getView().animate({zoom:r,center:[e,t],duration:500})}}
//# sourceMappingURL=main.js.map
