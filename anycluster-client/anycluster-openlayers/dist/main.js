var e=require("anycluster-client"),r=require("ol/layer/Vector"),t=require("ol/source/Vector"),o=require("ol/style"),a=require("ol/format/GeoJSON"),s=require("ol/Feature"),i=require("ol/geom/Point");function l(e,r,t,o){Object.defineProperty(e,r,{get:t,set:o,enumerable:!0,configurable:!0})}function n(e){return e&&e.__esModule?e.default:e}l(module.exports,"ClusterMethod",(()=>$b0d4e62e8aa64baf$re_export$ClusterMethod)),l(module.exports,"AnyclusterOpenLayers",(()=>h));const c={5:"rgba(100, 75, 80, .3)",10:"rgba(90, 50, 50, .3)",50:"rgba(100, 50, 31, .3)",100:"rgba(100, 65, 0, .3)",1e3:"rgba(255, 69, 0, .3)",1e4:"rgba(255, 0 , 0, .3)"},u={5:"pink",10:"lightcoral",50:"coral",100:"orange",1e3:"orangered",1e4:"red"};class h extends e.AnyclusterClient{constructor(e,r,t,o){super(e,r,t,o),this.currentZoom=this.getZoom(),this.gridFillColors=o.gridFillColors?o.gridFillColors:c,this.gridStrokeColors=o.gridStrokeColors?o.gridStrokeColors:u}removeArea(){this.map.hasOwnProperty("areaLayer")&&this.map.areaLayer.getSource().clear()}getAreaStyle(e,r){return new(0,o.Style)({stroke:new(0,o.Stroke)({color:"rgba(255, 0, 0, 1)",width:2}),fill:new(0,o.Fill)({color:"rgba(255, 0, 0, .3)"})})}addArea(e){this.map.hasOwnProperty("areaLayer")||this.createAreaLayer();const r=new(n(a))({featureProjection:"EPSG:3857"}).readFeatures(e);this.map.areaLayer.getSource().addFeatures(r)}createClusterLayers(){const e=new(n(r))({source:new(n(t)),style:this.getCellStyle.bind(this)});this.map.addLayer(e),this.map.gridClusterLayer=e;const o=new(n(r))({source:new(n(t))});this.map.addLayer(o),this.map.kmeansLayer=o,this.map.on("click",(e=>{let r=!1;this.map.forEachFeatureAtPixel(e.pixel,(e=>{if(0==r&&(console.log(e),"cell"==e.clustertype||"marker"==e.clustertype)){r=!0,this.getZoom()>=13||1==e.count?this.onMarkerFinalClick(e):this.markerClickFunction(e.x,e.y)}}))})),this.map.on("pointermove",(e=>{let r=this.map.getEventPixel(e.originalEvent),t=this.map.hasFeatureAtPixel(r);this.map.getViewport().style.cursor=t?"pointer":""}))}createAreaLayer(){const e=new(n(r))({source:new(n(t)),style:this.getAreaStyle.bind(this)});this.map.getLayers().insertAt(2,e),this.map.areaLayer=e}getMarkerIcon(e){const r=this.selectPinIcon(e),t=new(0,o.Icon)({anchor:r.relativeAnchor,crossOrigin:"anonymous",src:r.url,imgSize:r.size,size:r.size});return new(0,o.Style)({image:t})}drawMarker(e){const r=this.getMarkerIcon(e),t=new(n(i))([e.center.x,e.center.y]);let o=new(n(s))(t);o.setStyle(r);let a=this.setMarkerProps(o,e);a.clustertype="marker",this.map.kmeansLayer.getSource().addFeature(a),this.markerList.push(a)}getCellStyle(e,r){const t=this.roundMarkerCount(e.get("count")),a=this.gridFillColors[t],s=this.gridStrokeColors[t];return new(0,o.Style)({stroke:new(0,o.Stroke)({color:s,width:2}),fill:new(0,o.Fill)({color:a})})}drawCell(e){if(1==e.count)this.drawMarker(e);else{const r={type:"Feature",geometry:e.geojson};let t=(new(n(a))).readFeature(r),o=this.setMarkerProps(t,e);o.clustertype="cell",this.map.gridClusterLayer.getSource().addFeature(o)}}removeAllMarkers(){this.map.kmeansLayer.getSource().clear(),this.map.hasOwnProperty("gridClusterLayer")&&this.map.gridClusterLayer.getSource().clear(),this.markerList.length=0}addMapEventListeners(){this.map.addEventListener("moveend",(e=>{let r=this.getZoom();r!=this.currentZoom&&(this.removeAllMarkers(),this.currentZoom=r),this.getClusters()}))}getViewport(){const e=this.map.getView().calculateExtent(this.map.getSize()),r=e[0],t=e[1],o=e[2];return{left:r,top:e[3],right:o,bottom:t}}getZoom(){return this.map.getView().getZoom()}setZoom(e){this.map.setZoom(e)}setMap(e,r,t){this.map.getView().animate({zoom:t,center:[e,r],duration:500})}}
//# sourceMappingURL=main.js.map
