{"mappings":"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","sources":["src/index.ts","src/anycluster-openlayers.ts","node_modules/anycluster-client/dist/anycluster.js","node_modules/anycluster-client/dist/src/index.ts","node_modules/anycluster-client/dist/src/consts.ts","node_modules/anycluster-client/dist/src/anycluster.ts","node_modules/anycluster-client/dist/src/anycluster-client.ts","node_modules/ol/layer/Vector.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/layer/Layer.js","node_modules/ol/layer/Base.js","node_modules/ol/Object.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Observable.js","node_modules/ol/events/Target.js","node_modules/ol/Disposable.js","node_modules/ol/functions.js","node_modules/ol/array.js","node_modules/ol/obj.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/util.js","node_modules/ol/layer/Property.js","node_modules/ol/asserts.js","node_modules/ol/AssertionError.js","node_modules/ol/math.js","node_modules/ol/render/EventType.js","node_modules/ol/View.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/proj.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/extent.js","node_modules/ol/extent/Relationship.js","node_modules/ol/coordinate.js","node_modules/ol/string.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/geom/Polygon.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/Geometry.js","node_modules/ol/transform.js","node_modules/ol/has.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/flat/reverse.js","node_modules/rbush/rbush.min.js","node_modules/ol/style/Style.js","node_modules/ol/style/Circle.js","node_modules/ol/style/RegularShape.js","node_modules/ol/ImageState.js","node_modules/ol/style/Image.js","node_modules/ol/size.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/dom.js","node_modules/ol/render/canvas.js","node_modules/ol/css.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/flat.js","node_modules/ol/style/Icon.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/Image.js","node_modules/ol/ImageBase.js","node_modules/ol/style/Text.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/geom/flat/length.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/renderer/vector.js","node_modules/ol/source/Vector.js","node_modules/ol/Collection.js","node_modules/ol/CollectionEventType.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/Feature.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/format/Feature.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom/flat/center.js"],"sourcesContent":["export {\n    ClusterMethod,\n    AnyclusterOpenLayers,\n} from \"./anycluster-openlayers\";","import {\n    AnyclusterClient,\n    AnyclusterClientSettings,\n    Viewport,\n    Cluster,\n    ClusterMethod,\n    GeoJSON as IGeoJSON,\n    IconType\n} from 'anycluster-client';\n\nexport {\n    ClusterMethod\n};\n\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Icon, Stroke, Style, Fill, Text } from 'ol/style';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\n\ninterface ExtendedFeature extends Feature {\n    x: number\n    y: number\n    count: number\n    clustertype: string\n}\n\ninterface StyleOptions {\n    image: Icon,\n    text?: Text,\n}\n\nexport class AnyclusterOpenLayers extends AnyclusterClient {\n\n    currentZoom: number\n\n    constructor(map: any, apiUrl: string, markerFolderPath: string, settings: AnyclusterClientSettings) {\n        super(map, apiUrl, markerFolderPath, settings);\n        this.currentZoom = this.getZoom();\n    }\n\n\n    removeArea() {\n        if (this.map.hasOwnProperty(\"areaLayer\")) {\n            this.map.areaLayer.getSource().clear();\n        }\n    }\n\n    getAreaStyle(feature: Feature, resolution: number): Style {\n\n        const style = new Style({\n            stroke: new Stroke({\n                color: \"rgba(255, 0, 0, 1)\",\n                width: 2,\n            }),\n            fill: new Fill({\n                color: \"rgba(255, 0, 0, .3)\",\n            }),\n        });\n\n        return style;\n    }\n\n    addArea(geojson: IGeoJSON) {\n        if (!this.map.hasOwnProperty(\"areaLayer\")) {\n            this.createAreaLayer();\n        }\n\n        const features = new GeoJSON({\n            featureProjection: \"EPSG:3857\"\n        }).readFeatures(geojson);\n\n        \n        this.map.areaLayer.getSource().addFeatures(features);\n\n    }\n\n    createClusterLayers() {\n\n        const gridClusterLayer = new VectorLayer({\n            source: new VectorSource(),\n            style: this.getCellStyle.bind(this) as any,\n        });\n\n        this.map.addLayer(gridClusterLayer);\n        this.map.gridClusterLayer = gridClusterLayer;\n\n        const kmeansLayer = new VectorLayer({\n            source: new VectorSource()\n        });\n\n        this.map.addLayer(kmeansLayer);\n        this.map.kmeansLayer = kmeansLayer;\n\n        this.map.on(\"click\", (event: any) => {\n\n            let hit = false;\n\n            this.map.forEachFeatureAtPixel(event.pixel, (feature: ExtendedFeature) => {\n\n                if (hit == false){\n\n                    if (feature.clustertype == \"cell\" || feature.clustertype == \"marker\"){\n                        hit = true;\n                        let zoom = this.getZoom();\n\n                        if (zoom >= this.maxZoom || feature.count == 1) {\n                            this.onMarkerFinalClick(feature);\n                        }\n\n                        else {\n                            this.markerClickFunction(feature.x, feature.y);\n                        }\n                    }\n                }\n            });\n        });\n\n        this.map.on(\"pointermove\", (event: any) => {\n            let pixel = this.map.getEventPixel(event.originalEvent);\n            let hit = this.map.hasFeatureAtPixel(pixel);\n            this.map.getViewport().style.cursor = hit ? 'pointer' : '';\n        });\n    }\n\n    createAreaLayer() {\n\n        const areaLayer = new VectorLayer({\n            source: new VectorSource(),\n            style: this.getAreaStyle.bind(this) as any,\n        });\n\n        const layers = this.map.getLayers();\n        layers.insertAt(2, areaLayer);\n        //this.map.addLayer(areaLayer);\n        this.map.areaLayer = areaLayer;\n    }\n\n    getMarkerIcon(cluster: Cluster) {\n\n        const piniconObj = this.selectPinIcon(cluster);\n\n        const icon = new Icon({\n            anchor: piniconObj.relativeAnchor,\n            crossOrigin: \"anonymous\",\n            src: piniconObj.url,\n            imgSize: piniconObj.size,\n            size: piniconObj.size\n        });\n\n        const styleOptions: StyleOptions = {\n            image: icon,\n        };\n\n        if (this.iconType === IconType.exact && cluster.count > 1){\n            styleOptions.text = new Text({\n                text: cluster.count.toString(),\n                font: 'bold 14px sans-serif',\n                fill: new Fill({color: '#FFF'}),\n                justify: 'center',\n                textBaseline: 'middle',\n                offsetY: 1,\n                padding: [0,0,0,0],\n            })\n        }\n        const style = new Style(styleOptions);\n\n        return style;\n          \n    }\n\n    drawMarker(cluster: Cluster) {\n\n        const style = this.getMarkerIcon(cluster);\n        const point = new Point([cluster.center.x, cluster.center.y]);\n\n        let marker = new Feature(point);\n\n        marker.setStyle(style);\n\n        let extendedMarker: ExtendedFeature = this.setMarkerProps(marker, cluster);\n        extendedMarker.clustertype = \"marker\";\n\n        this.map.kmeansLayer.getSource().addFeature(extendedMarker)\n\n        this.markerList.push(extendedMarker);\n    }\n\n    getCellStyle(feature: ExtendedFeature, resolution: number): Style {\n\n        const roundedCount = this.roundMarkerCount(feature.count);\n        const fillColor = this.gridFillColors[roundedCount];\n        const strokeColor = this.gridStrokeColors[roundedCount];\n        const strokeWeight = 2;\n\n        const style = new Style({\n            stroke: new Stroke({\n                color: strokeColor,\n                width: strokeWeight,\n            }),\n            fill: new Fill({\n                color: fillColor,\n            }),\n        });\n\n        return style;\n    }\n\n    drawCell(cluster: Cluster) {\n\n        const count = cluster.count;\n\n        if (count == 1) {\n            this.drawMarker(cluster)\n        }\n        else {\n\n            const geojson = {\n                \"type\": \"Feature\",\n                \"geometry\": cluster.geojson,\n            };\n\n            let feature = new GeoJSON().readFeature(geojson);\n\n            let extendedFeature: ExtendedFeature = this.setMarkerProps(feature, cluster);\n            extendedFeature.clustertype = \"cell\";\n\n            this.map.gridClusterLayer.getSource().addFeature(extendedFeature)\n\n        }\n\n    }\n\n    removeAllMarkers() {\n\n        \n        this.map.kmeansLayer.getSource().clear();\n\n        if (this.map.hasOwnProperty(\"gridClusterLayer\")) {\n            this.map.gridClusterLayer.getSource().clear();\n        }\n\n        this.markerList.length = 0;\n\n    }\n\n    addMapEventListeners () {\n        // unfortunately fires after loadend\n        this.map.addEventListener(\"moveend\", (event: any) => {\n\n            let newZoom = this.getZoom();\n            if (newZoom != this.currentZoom){\n                this.removeAllMarkers();\n                this.currentZoom = newZoom;\n            }\n            this.getClusters();\n        });\n    }\n\n\n    getViewport(): Viewport {\n\n        const view = this.map.getView();\n\n        const extent = view.calculateExtent(this.map.getSize());\n\n        const left = extent[0];\n        const bottom = extent[1];\n        const right = extent[2];\n        const top = extent[3];\n\n        const viewportJSON = {\n            \"left\": left,\n            \"top\": top,\n            \"right\": right,\n            \"bottom\": bottom\n        };\n\n        return viewportJSON;\n        \n    }\n\n    getZoom(): number {\n        const view = this.map.getView();\n        return view.getZoom();\n    }\n\n    setZoom(zoom: number): void {\n        this.map.setZoom(zoom);\n    }\n\n\n    setMap(x: number, y: number, zoom: number): void {\n        const view = this.map.getView();\n        view.animate({\n            zoom: zoom,\n            center: [x, y],\n            duration: 500,\n        });\n    }\n\n}","var $b4f6019a3c0f60c0$export$55fee9ea2526ad0d;\n(function(SRIDS) {\n    SRIDS[\"EPSG4326\"] = \"EPSG:4326\";\n    SRIDS[\"EPSG3857\"] = \"EPSG:3857\";\n})($b4f6019a3c0f60c0$export$55fee9ea2526ad0d || ($b4f6019a3c0f60c0$export$55fee9ea2526ad0d = {}));\nvar $b4f6019a3c0f60c0$export$ae91e066970d978a;\n(function(ClusterMethod) {\n    ClusterMethod[\"kmeans\"] = \"kmeans\";\n    ClusterMethod[\"grid\"] = \"grid\";\n})($b4f6019a3c0f60c0$export$ae91e066970d978a || ($b4f6019a3c0f60c0$export$ae91e066970d978a = {}));\nvar $b4f6019a3c0f60c0$export$8f4397a63c3cef66;\n(function(GeometryType) {\n    GeometryType[\"viewport\"] = \"viewport\";\n    GeometryType[\"area\"] = \"area\";\n})($b4f6019a3c0f60c0$export$8f4397a63c3cef66 || ($b4f6019a3c0f60c0$export$8f4397a63c3cef66 = {}));\nvar $b4f6019a3c0f60c0$export$13ff1290a9e22e77;\n(function(IconType) {\n    IconType[\"exact\"] = \"exact\";\n    IconType[\"rounded\"] = \"rounded\";\n})($b4f6019a3c0f60c0$export$13ff1290a9e22e77 || ($b4f6019a3c0f60c0$export$13ff1290a9e22e77 = {}));\nvar $b4f6019a3c0f60c0$export$9c3a9f8fbf06a34;\n(function(DefaultGridSizes) {\n    DefaultGridSizes[DefaultGridSizes[\"grid\"] = 64] = \"grid\";\n    DefaultGridSizes[DefaultGridSizes[\"kmeans\"] = 150] = \"kmeans\";\n})($b4f6019a3c0f60c0$export$9c3a9f8fbf06a34 || ($b4f6019a3c0f60c0$export$9c3a9f8fbf06a34 = {}));\nconst $b4f6019a3c0f60c0$export$96b1907ff7fa3578 = {\n    1: [\n        24,\n        39\n    ],\n    5: [\n        30,\n        30\n    ],\n    10: [\n        30,\n        30\n    ],\n    50: [\n        40,\n        40\n    ],\n    100: [\n        40,\n        40\n    ],\n    1000: [\n        50,\n        50\n    ],\n    10000: [\n        60,\n        60\n    ]\n};\nvar $b4f6019a3c0f60c0$export$7fa100a28fbb5fe2;\n(function(Operators) {\n    Operators[\"in\"] = \"in\";\n    Operators[\"notIn\"] = \"not in\";\n    Operators[\"equals\"] = \"=\";\n    Operators[\"unEquals\"] = \"!=\";\n    Operators[\"largerThan\"] = \">=\";\n    Operators[\"smallerThan\"] = \"<=\";\n    Operators[\"startswith\"] = \"startswith\";\n    Operators[\"contains\"] = \"contains\";\n})($b4f6019a3c0f60c0$export$7fa100a28fbb5fe2 || ($b4f6019a3c0f60c0$export$7fa100a28fbb5fe2 = {}));\nvar $b4f6019a3c0f60c0$export$9a28c02ac0f6fc9d;\n(function(LogicalOperators) {\n    LogicalOperators[\"AND\"] = \"AND\";\n    LogicalOperators[\"OR\"] = \"OR\";\n})($b4f6019a3c0f60c0$export$9a28c02ac0f6fc9d || ($b4f6019a3c0f60c0$export$9a28c02ac0f6fc9d = {}));\nconst $b4f6019a3c0f60c0$export$aa170efeb32c8cf9 = 13;\n\n\n\nconst $9ef97b21dccf4ee3$export$2104d4dd9d4984b2 = Object.freeze({\n    minX: -179,\n    maxX: 179,\n    minY: -89,\n    maxY: 89\n});\nconst $9ef97b21dccf4ee3$export$6db2f048e15a981e = Object.freeze({\n    minX: -20037500,\n    maxX: 20037500,\n    minY: -20048960,\n    maxY: 20048960 //  20048966.1\n});\nclass $9ef97b21dccf4ee3$export$5e01b9ff483562af {\n    constructor(apiUrl, gridSize, srid){\n        this.apiUrl = apiUrl;\n        this.gridSize = gridSize;\n        this.srid = srid;\n        if (this.srid == (0, $b4f6019a3c0f60c0$export$55fee9ea2526ad0d).EPSG4326) this.maxBounds = $9ef97b21dccf4ee3$export$2104d4dd9d4984b2;\n        else if (this.srid == (0, $b4f6019a3c0f60c0$export$55fee9ea2526ad0d).EPSG3857) this.maxBounds = $9ef97b21dccf4ee3$export$6db2f048e15a981e;\n        else throw new Error(`invalid srid given: ${this.srid} `);\n    }\n    async getGridCluster(zoom, data) {\n        const url = `${this.apiUrl}grid/${zoom}/${this.gridSize}/`;\n        const clusters = await this.post(url, data);\n        return clusters;\n    }\n    async getKmeansCluster(zoom, data) {\n        const url = `${this.apiUrl}kmeans/${zoom}/${this.gridSize}/`;\n        const clusters = await this.post(url, data);\n        return clusters;\n    }\n    async getKmeansClusterContent(zoom, data) {\n        const url = `${this.apiUrl}get-kmeans-cluster-content/${zoom}/${this.gridSize}/`;\n        const clusterContent = await this.post(url, data);\n        return clusterContent;\n    }\n    async getDatasetContent(zoom, datasetId) {\n        const url = `${this.apiUrl}get-dataset-content/${zoom}/${this.gridSize}/${datasetId}/`;\n        const clusterContent = await this.get(url);\n        return clusterContent;\n    }\n    async getMapContentCount(zoom, data) {\n        const url = `${this.apiUrl}get-map-content-count/${zoom}/${this.gridSize}/`;\n        const mapContentCount = await this.post(url, data);\n        return mapContentCount;\n    }\n    async getGroupedMapContents(zoom, data) {\n        const url = `${this.apiUrl}get-grouped-map-contents/${zoom}/${this.gridSize}/`;\n        const groupedMapContents = await this.post(url, data);\n        return groupedMapContents;\n    }\n    async getAreaContent(zoom, data) {\n        const url = `${this.apiUrl}get-area-content/${zoom}/${this.gridSize}/`;\n        const areaContent = await this.post(url, data);\n        return areaContent;\n    }\n    viewportToGeoJSON(viewport) {\n        const left = Math.max(viewport.left, this.maxBounds.minX);\n        const right = Math.min(viewport.right, this.maxBounds.maxX);\n        const top = Math.min(viewport.top, this.maxBounds.maxY);\n        const bottom = Math.max(viewport.bottom, this.maxBounds.minY);\n        const geometryType = \"Polygon\";\n        const coordinates = [\n            [\n                [\n                    left,\n                    top\n                ],\n                [\n                    right,\n                    top\n                ],\n                [\n                    right,\n                    bottom\n                ],\n                [\n                    left,\n                    bottom\n                ],\n                [\n                    left,\n                    top\n                ]\n            ]\n        ];\n        const geoJSON = {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": geometryType,\n                \"coordinates\": coordinates,\n                \"crs\": {\n                    \"type\": \"name\",\n                    \"properties\": {\n                        \"name\": this.srid\n                    }\n                }\n            }\n        };\n        return geoJSON;\n    }\n    async post(url, postData) {\n        const encodedUrl = encodeURI(url);\n        const options = {\n            method: \"POST\",\n            body: JSON.stringify(postData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            mode: \"cors\",\n            credentials: \"include\"\n        };\n        const response = await fetch(encodedUrl, options);\n        const responseData = await response.json();\n        if (response.ok) return responseData;\n        else throw new Error(JSON.stringify(responseData));\n    }\n    async get(url) {\n        const encodedUrl = encodeURI(url);\n        const options = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            mode: \"cors\",\n            credentials: \"include\"\n        };\n        const response = await fetch(encodedUrl, options);\n        const responseData = await response.json();\n        if (response.ok) return responseData;\n        else throw new Error(JSON.stringify(responseData));\n    }\n}\n\n\n\n\nconst $2a18f65d622cfe30$var$defaultGridFillColors = {\n    5: \"rgba(255, 192, 203, .5)\",\n    10: \"rgba(240, 128, 128, .5)\",\n    50: \"rgba(255, 127, 80, .5)\",\n    100: \"rgba(255, 165, 0, .5)\",\n    1000: \"rgba(255, 69, 0, .5)\",\n    10000: \"rgba(255, 0 , 0, .5)\"\n};\nconst $2a18f65d622cfe30$var$defaultGridStrokeColors = {\n    5: \"pink\",\n    10: \"lightcoral\",\n    50: \"coral\",\n    100: \"orange\",\n    1000: \"orangered\",\n    10000: \"red\"\n};\nclass $2a18f65d622cfe30$export$a09c19a7c4419c1 {\n    constructor(map, apiUrl, markerFolderPath, settings){\n        this.map = map;\n        this.apiUrl = apiUrl;\n        this.markerFolderPath = markerFolderPath;\n        this.filters = [];\n        this.map = map;\n        this.apiUrl = apiUrl;\n        this.markerFolderPath = markerFolderPath;\n        settings = settings || {};\n        // settings\n        this.srid = settings.srid ? settings.srid : (0, $b4f6019a3c0f60c0$export$55fee9ea2526ad0d).EPSG4326;\n        this.kmeansGridSize = settings.gridGridSize ? settings.gridGridSize : (0, $b4f6019a3c0f60c0$export$9c3a9f8fbf06a34).kmeans;\n        this.gridGridSize = settings.gridGridSize ? settings.gridGridSize : (0, $b4f6019a3c0f60c0$export$9c3a9f8fbf06a34).grid;\n        this.clusterMethod = settings.clusterMethod ? settings.clusterMethod : (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).kmeans;\n        this.geometryType = settings.geometryType ? settings.geometryType : (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).viewport;\n        this.area = settings.area ? settings.area : null;\n        this.iconType = settings.iconType ? settings.iconType : (0, $b4f6019a3c0f60c0$export$13ff1290a9e22e77).rounded;\n        this.singlePinImages = settings.singlePinImages ? settings.singlePinImages : {};\n        this.markerImageSizes = settings.markerImageSizes ? settings.markerImageSizes : (0, $b4f6019a3c0f60c0$export$96b1907ff7fa3578);\n        this.gridFillColors = settings.gridFillColors ? settings.gridFillColors : $2a18f65d622cfe30$var$defaultGridFillColors;\n        this.gridStrokeColors = settings.gridStrokeColors ? settings.gridStrokeColors : $2a18f65d622cfe30$var$defaultGridStrokeColors;\n        this.maxZoom = settings.maxZoom ? settings.maxZoom : (0, $b4f6019a3c0f60c0$export$aa170efeb32c8cf9);\n        // hooks\n        this.onGotClusters = settings.onGotClusters ? settings.onGotClusters : this._onGotClusters;\n        this.onFinalClick = settings.onFinalClick ? settings.onFinalClick : this._onFinalClick;\n        if (this.area) this.setArea(this.area);\n        const gridSize = this.getGridSize();\n        this.anycluster = new (0, $9ef97b21dccf4ee3$export$5e01b9ff483562af)(this.apiUrl, gridSize, this.srid);\n        this.createClusterLayers();\n        this.markerList = [];\n        this.startClustering();\n    }\n    createClusterLayers() {\n        throw new Error(\"NotImplementedError: createClusterLayers\");\n    }\n    addArea(geojson) {\n        throw new Error(\"NotImplementedError: addArea\");\n    }\n    removeArea() {\n        throw new Error(\"NotImplementedError: removeArea\");\n    }\n    removeAllMarkers() {\n        throw new Error(\"NotImplementedError: removeAllMarkers\");\n    }\n    getZoom() {\n        throw new Error(\"NotImplementedError: getZoom\");\n    }\n    setMap(x, y, zoom) {\n        throw new Error(\"NotImplementedError: setMap\");\n    }\n    getViewport() {\n        throw new Error(\"NotImplementedError: setMap\");\n    }\n    addMapEventListeners() {\n        throw new Error(\"NotImplementedError: addMapEventListeners\");\n    }\n    drawMarker(cluster) {\n        throw new Error(\"NotImplementedError: drawMarker\");\n    }\n    drawCell(cluster) {\n        throw new Error(\"NotImplementedError: drawCell\");\n    }\n    getGridSize() {\n        if (this.clusterMethod == (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).grid) return this.gridGridSize;\n        return this.kmeansGridSize;\n    }\n    setClusterMethod(clusterMethod) {\n        if (clusterMethod == (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).grid) {\n            this.area = null;\n            this.geometryType = (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).viewport;\n            this.removeArea();\n        }\n        this.removeAllMarkers();\n        this.clusterMethod = clusterMethod;\n        const gridSize = this.getGridSize();\n        this.anycluster = new (0, $9ef97b21dccf4ee3$export$5e01b9ff483562af)(this.apiUrl, gridSize, this.srid);\n        this.markerList = [];\n        this.getClusters(true);\n    }\n    setArea(geojson) {\n        this.area = geojson;\n        this.removeArea();\n        if (geojson == null) {\n            this.geometryType = (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).viewport;\n            this.setClusterMethod((0, $b4f6019a3c0f60c0$export$ae91e066970d978a).kmeans);\n        } else {\n            this.addArea(geojson);\n            this.geometryType = (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).area;\n            this.setClusterMethod((0, $b4f6019a3c0f60c0$export$ae91e066970d978a).kmeans);\n        }\n    }\n    getSinglePinImageURL(cluster) {\n        const pinimg = cluster.pinimg;\n        let url = `${this.markerFolderPath}pin_unknown.png`;\n        if (this.singlePinImages && pinimg && pinimg in this.singlePinImages) url = this.singlePinImages[pinimg];\n        return url;\n    }\n    selectPinIcon(cluster) {\n        const count = cluster.count;\n        let markerImageUrl = this.getSinglePinImageURL(cluster);\n        let pinicon = \"1\";\n        if (count > 10000) pinicon = \"10000\";\n        else if (count > 1000) pinicon = \"1000\";\n        else if (count > 100) pinicon = \"100\";\n        else if (count > 50) pinicon = \"50\";\n        else if (count > 10) pinicon = \"10\";\n        else if (count > 1) pinicon = \"5\";\n        if (count > 1) {\n            if (this.iconType == (0, $b4f6019a3c0f60c0$export$13ff1290a9e22e77).exact) markerImageUrl = `${this.markerFolderPath}${pinicon}_empty.png`;\n            else markerImageUrl = `${this.markerFolderPath}${pinicon}.png`;\n        }\n        const size = this.markerImageSizes[pinicon];\n        let anchor = [\n            Math.round(size[0] / 2),\n            size[1] - 1\n        ];\n        let relativeAnchor = [\n            0.5,\n            1\n        ];\n        if (count > 1) {\n            anchor = [\n                Math.round(size[0] / 2),\n                Math.round(size[1] / 2)\n            ];\n            relativeAnchor = [\n                0.5,\n                0.5\n            ];\n        }\n        const imgObj = {\n            url: markerImageUrl,\n            size: size,\n            anchor: anchor,\n            relativeAnchor: relativeAnchor,\n            popupAnchor: [\n                0,\n                -Math.round(size[1]) + 8\n            ]\n        };\n        return imgObj;\n    }\n    // marker can be an openlayers Feature or a L.marker\n    setMarkerProps(marker, cluster) {\n        // add properties required by anycluster\n        marker.x = cluster.center.x;\n        marker.y = cluster.center.y;\n        marker.count = cluster.count;\n        if (cluster.hasOwnProperty(\"ids\")) marker.ids = cluster.ids;\n        if (cluster.hasOwnProperty(\"id\")) marker.id = cluster.id;\n        if (cluster.hasOwnProperty(\"geojson\")) /*const geojson = {\n          \"type\": \"Feature\",\n          \"count\": cluster.count,\n          \"geometry\": cluster.geojson,\n          \"properties\": {\n              \"count\": cluster.count\n          },\n          \"crs\" : {\n              \"type\" : \"name\",\n              \"properties\" : {\n                  \"name\" : this.srid\n              }\n          }\n      };*/ marker.geojson = cluster.geojson;\n        return marker;\n    }\n    markerClickFunction(x, y) {\n        this.removeAllMarkers();\n        let zoom = this.getZoom();\n        zoom = zoom + 3;\n        this.setMap(x, y, zoom);\n    }\n    async onMarkerFinalClick(marker) {\n        const zoom = this.getZoom();\n        const x = marker.x;\n        const y = marker.y;\n        const ids = marker.ids;\n        if (this.clusterMethod == (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).kmeans) {\n            const postData = {\n                \"geometry_type\": this.geometryType,\n                \"input_srid\": this.srid,\n                \"x\": x,\n                \"y\": y,\n                \"ids\": ids,\n                \"filters\": this.filters\n            };\n            const data = await this.anycluster.getKmeansClusterContent(zoom, postData);\n            this.onFinalClick(marker, data);\n        } else if (this.clusterMethod = (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).grid) {\n            if (marker.count == 1) {\n                const data = await this.anycluster.getDatasetContent(zoom, marker.id);\n                this.onFinalClick(marker, data);\n            } else {\n                const geojson = marker[\"geojson\"];\n                const zoom = this.getZoom();\n                const data = await this.anycluster.getAreaContent(zoom, geojson);\n                this.onFinalClick(marker, data);\n            }\n        }\n    }\n    roundMarkerCount(count) {\n        if (count == 1) count = 1;\n        else if (count <= 5) count = 5;\n        else if (count <= 10) count = 10;\n        else if (count <= 50) count = 50;\n        else if (count <= 100) count = 100;\n        else if (count <= 1000) count = 1000;\n        else count = 10000;\n        return count;\n    }\n    getClusterGeometry() {\n        let geoJSON;\n        if (this.geometryType == (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).viewport) {\n            const viewport = this.getViewport();\n            geoJSON = this.anycluster.viewportToGeoJSON(viewport);\n        } else if (this.geometryType == (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).area && this.area) geoJSON = this.area;\n        else throw new Error(\"No cluster geometry found\");\n        return geoJSON;\n    }\n    async getClusters(clearCache = false) {\n        const geoJSON = this.getClusterGeometry();\n        const postData = {\n            \"output_srid\": this.srid,\n            \"geometry_type\": this.geometryType,\n            \"geojson\": geoJSON,\n            \"clear_cache\": clearCache,\n            \"filters\": this.filters\n        };\n        const zoom = this.getZoom();\n        if (this.clusterMethod == (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).kmeans) {\n            const clusters = await this.anycluster.getKmeansCluster(zoom, postData);\n            if (clusters.length > 0) clusters.forEach((cluster)=>{\n                this.drawMarker(cluster);\n            });\n        } else if (this.clusterMethod == (0, $b4f6019a3c0f60c0$export$ae91e066970d978a).grid) {\n            const clusters = await this.anycluster.getGridCluster(zoom, postData);\n            if (clusters.length > 0) clusters.forEach((cluster)=>{\n                this.drawCell(cluster);\n            });\n        } else throw new Error(`Invalid clusterMethod: ${this.clusterMethod}`);\n        this.onGotClusters();\n    }\n    startClustering() {\n        this.getClusters(true);\n        this.addMapEventListeners();\n    }\n    filtersAreEqual(filter1, filter2) {\n        if (\"column\" in filter1 && \"column\" in filter2) {\n            if (filter1.column == filter2.column && filter1.value == filter2.value && filter1.operator == filter2.operator) return true;\n        } else if (JSON.stringify(filter1) === JSON.stringify(filter2)) return true;\n        return false;\n    }\n    // filtering\n    filter(filter, reloadMarkers) {\n        if (Array.isArray(filter)) this.filters = filter;\n        else this.filters = [\n            filter\n        ];\n        this.postFilterChange(reloadMarkers);\n    }\n    addFilter(filter, reloadMarkers) {\n        let filterExists = false;\n        for(let f = 0; f < this.filters.length; f++){\n            let existingFilter = this.filters[f];\n            if (this.filtersAreEqual(filter, existingFilter)) {\n                filterExists = true;\n                break;\n            }\n        }\n        if (!filterExists) this.filters.push(filter);\n        this.postFilterChange(reloadMarkers);\n    }\n    addFilters(filtersToAdd, reloadMarkers) {\n        for(let fa = 0; fa < filtersToAdd.length; fa++){\n            let filter = filtersToAdd[fa];\n            this.addFilter(filter, false);\n        }\n        this.postFilterChange(reloadMarkers);\n    }\n    removeFilter(filter, reloadMarkers) {\n        for(let f = 0; f < this.filters.length; f++){\n            let existingFilter = this.filters[f];\n            if (this.filtersAreEqual(filter, existingFilter)) {\n                this.filters.splice(f, 1);\n                break;\n            }\n        }\n        this.postFilterChange(reloadMarkers);\n    }\n    removeFilters(filtersToRemove, reloadMarkers) {\n        for(let fr = 0; fr < filtersToRemove.length; fr++){\n            let filter = filtersToRemove[fr];\n            this.removeFilter(filter, false);\n        }\n        this.postFilterChange(reloadMarkers);\n    }\n    resetFilters(reloadMarkers) {\n        this.filters = [];\n        this.postFilterChange(reloadMarkers);\n    }\n    postFilterChange(reloadMarkers) {\n        if (reloadMarkers != false) reloadMarkers = true;\n        if (reloadMarkers == true) {\n            this.removeAllMarkers();\n            this.getClusters(true);\n        }\n    }\n    /**\n   * method for getting the unaggregated, paginated content of the map\n   */ async getMapContents(limit, offset) {\n        const geoJSON = this.getClusterGeometry();\n        const zoom = this.getZoom();\n        const postData = {\n            \"output_srid\": this.srid,\n            \"geometry_type\": (0, $b4f6019a3c0f60c0$export$8f4397a63c3cef66).area,\n            \"geojson\": geoJSON,\n            \"clear_cache\": false,\n            \"filters\": this.filters,\n            \"limit\": limit,\n            \"offset\": offset\n        };\n        const data = this.anycluster.getAreaContent(zoom, postData);\n        return data;\n    }\n    /**\n   * methods for getting counts of objects on the current map / geometry\n   */ async getMapContentCount(modulations) {\n        const geoJSON = this.getClusterGeometry();\n        const postData = {\n            \"output_srid\": this.srid,\n            \"geometry_type\": this.geometryType,\n            \"geojson\": geoJSON,\n            \"clear_cache\": true,\n            \"filters\": this.filters,\n            \"modulations\": modulations\n        };\n        const zoom = this.getZoom();\n        const data = await this.anycluster.getMapContentCount(zoom, postData);\n        return data;\n    }\n    async getGroupedMapContents(groupBy) {\n        const geoJSON = this.getClusterGeometry();\n        const postData = {\n            \"output_srid\": this.srid,\n            \"geometry_type\": this.geometryType,\n            \"geojson\": geoJSON,\n            \"clear_cache\": true,\n            \"filters\": this.filters,\n            \"group_by\": groupBy\n        };\n        const zoom = this.getZoom();\n        const data = await this.anycluster.getGroupedMapContents(zoom, postData);\n        return data;\n    }\n    // hooks\n    _onFinalClick(marker, data) {\n        alert(JSON.stringify(data));\n    }\n    _onGotClusters() {}\n}\n\n\n\n\nexport {$b4f6019a3c0f60c0$export$ae91e066970d978a as ClusterMethod, $b4f6019a3c0f60c0$export$8f4397a63c3cef66 as GeometryType, $b4f6019a3c0f60c0$export$13ff1290a9e22e77 as IconType, $b4f6019a3c0f60c0$export$55fee9ea2526ad0d as SRIDS, $b4f6019a3c0f60c0$export$7fa100a28fbb5fe2 as Operators, $b4f6019a3c0f60c0$export$9a28c02ac0f6fc9d as LogicalOperators, $9ef97b21dccf4ee3$export$5e01b9ff483562af as Anycluster, $2a18f65d622cfe30$export$a09c19a7c4419c1 as AnyclusterClient};\n//# sourceMappingURL=anycluster.js.map\n","export {\n    ClusterMethod,\n    GeometryType,\n    IconType,\n    SRIDS,\n    Operators,\n    LogicalOperators,\n} from \"./consts\";\n\nexport { \n    Anycluster,\n} from \"./anycluster\";\n\nexport type {\n    Filter,\n    GetKmeansClusterContentRequestData,\n    ClusterRequestData,\n    MapContentCountRequestData,\n    GroupedMapContentRequestData,\n    AreaContentRequestData,\n    FilterList,\n    NestedFilter,\n    FilterOrNestedFilter,\n    FilterOrNestedFilterList,\n    Modulations,\n} from \"./anycluster\";\n\nexport {\n    AnyclusterClient,\n} from \"./anycluster-client\";\n\nexport type {\n    AnyclusterClientSettings\n} from \"./anycluster-client\";","\nexport interface MaxBounds {\n    minX: number,\n    maxX: number,\n    minY: number,\n    maxY: number\n}\n\nexport enum SRIDS {\n    EPSG4326 = 'EPSG:4326',\n    EPSG3857 = 'EPSG:3857'\n}\n\nexport enum ClusterMethod {\n    kmeans = 'kmeans',\n    grid = 'grid'\n}\n\n\nexport enum GeometryType {\n    viewport = 'viewport',\n    area = 'area'\n}\n\nexport enum IconType {\n    exact = 'exact',\n    rounded = 'rounded'\n}\n\nexport enum DefaultGridSizes {\n    grid = 64,\n    kmeans = 150\n}\n\nexport const DefaultMarkerImageSizes = {\n    1: [24, 39],\n    5: [30, 30],\n    10: [30, 30],\n    50: [40, 40],\n    100: [40, 40],\n    1000: [50, 50],\n    10000: [60, 60]\n}\n\nexport enum Operators {\n    in = 'in',\n    notIn = 'not in',\n    equals = '=',\n    unEquals = '!=',\n    largerThan = '>=',\n    smallerThan = '<=',\n    startswith = 'startswith',\n    contains = 'contains',\n}\n\nexport enum LogicalOperators {\n    AND = 'AND',\n    OR = 'OR',\n}\n\nexport const DefaultMaxZoom = 13;","import { SRIDS, MaxBounds, ClusterMethod, GeometryType, Operators, LogicalOperators } from \"./consts\";\nimport { Point, GeoJSON, Coordinates, Viewport } from \"./geometry\";\n\nexport const Bounds4326: MaxBounds = Object.freeze({\n    minX: -179,\n    maxX: 179,\n    minY: -89,\n    maxY: 89\n})\n\n\nexport const Bounds3857: MaxBounds = Object.freeze({\n    minX: -20037500, //-20037508.34\n    maxX: 20037500, // 20037508.34\n    minY: -20048960, // -20048966.1\n    maxY: 20048960 //  20048966.1\n})\n\nexport interface Filter {\n    column: string\n    value: string | number | boolean\n    operator: Operators\n    logicalOperator?: LogicalOperators\n}\n\nexport interface NestedFilter {\n    filters : Filter[]\n    logicalOperator?: LogicalOperators\n}\n\nexport type FilterOrNestedFilter = Filter | NestedFilter;\n\nexport interface ClusterRequestData {\n    output_srid: SRIDS\n    geometry_type: GeometryType\n    geojson: GeoJSON\n    clear_cache: boolean\n    filters: FilterOrNestedFilter[]\n}\n\nexport type FilterList = Filter[];\n\nexport type FilterOrNestedFilterList = FilterOrNestedFilter[];\n\nexport interface GetKmeansClusterContentRequestData {\n    geometry_type: GeometryType\n    input_srid: SRIDS\n    x: number\n    y: number\n    ids: number[]\n}\n\nexport interface Modulations {\n    [name:string] : Filter | NestedFilter\n}\n\nexport interface MapContentCountRequestData extends ClusterRequestData {\n    modulations?: Modulations\n}\n\nexport interface AreaContentRequestData extends ClusterRequestData {\n    limit?: number\n    offset?: number\n}\n\nexport interface GroupedMapContentRequestData extends ClusterRequestData {\n    group_by: string\n}\n\nexport class Anycluster {\n\n    maxBounds: MaxBounds\n\n    constructor(private apiUrl: string, public gridSize: number, public srid: SRIDS) {\n\n        if (this.srid == SRIDS.EPSG4326) {\n            this.maxBounds = Bounds4326;\n        }\n        else if (this.srid == SRIDS.EPSG3857) {\n            this.maxBounds = Bounds3857;\n        }\n        else {\n            throw new Error(`invalid srid given: ${this.srid} `);\n        }\n\n    }\n\n    async getGridCluster(zoom: number, data: ClusterRequestData) {\n        const url = `${this.apiUrl}grid/${zoom}/${this.gridSize}/`;\n        const clusters = await this.post(url, data);\n        return clusters;\n    }\n\n    async getKmeansCluster(zoom: number, data: ClusterRequestData) {\n\n        const url = `${this.apiUrl}kmeans/${zoom}/${this.gridSize}/`;\n        const clusters = await this.post(url, data);\n        return clusters\n    }\n\n    async getKmeansClusterContent(zoom: number, data: GetKmeansClusterContentRequestData) {\n\n        const url = `${this.apiUrl}get-kmeans-cluster-content/${zoom}/${this.gridSize}/`;\n\n        const clusterContent = await this.post(url, data);\n\n        return clusterContent;\n    }\n\n    async getDatasetContent(zoom: number, datasetId: number) {\n        const url = `${this.apiUrl}get-dataset-content/${zoom}/${this.gridSize}/${datasetId}/`;\n\n        const clusterContent = await this.get(url);\n\n        return clusterContent;\n    }\n\n    async getMapContentCount(zoom: number, data: MapContentCountRequestData) {\n        const url = `${this.apiUrl}get-map-content-count/${zoom}/${this.gridSize}/`;\n\n        const mapContentCount = await this.post(url, data)\n\n        return mapContentCount;\n    }\n\n    async getGroupedMapContents(zoom: number, data: GroupedMapContentRequestData) {\n        const url = `${this.apiUrl}get-grouped-map-contents/${zoom}/${this.gridSize}/`;\n\n        const groupedMapContents = await this.post(url, data);\n\n        return groupedMapContents;\n\n    }\n\n    async getAreaContent(zoom:number, data: AreaContentRequestData) {\n        const url = `${this.apiUrl}get-area-content/${zoom}/${this.gridSize}/`;\n\n        const areaContent = await this.post(url, data);\n\n        return areaContent;\n    }\n\n    viewportToGeoJSON(viewport: Viewport) {\n\n        const left = Math.max(viewport.left, this.maxBounds.minX);\n        const right = Math.min(viewport.right, this.maxBounds.maxX);\n        const top = Math.min(viewport.top, this.maxBounds.maxY);\n        const bottom = Math.max(viewport.bottom, this.maxBounds.minY);\n\n        const geometryType = \"Polygon\";\n\n        const coordinates = [[\n            [left, top],\n            [right, top],\n            [right, bottom],\n            [left, bottom],\n            [left, top]\n        ]];\n\n        const geoJSON = {\n            \"type\": \"Feature\",\n            \"geometry\": {\n                \"type\": geometryType,\n                \"coordinates\": coordinates,\n                \"crs\": {\n                    \"type\": \"name\",\n                    \"properties\": {\n                        \"name\": this.srid\n                    }\n                }\n            }\n        };\n\n        return geoJSON;\n    }\n\n    async post(url: string, postData: object) {\n\n        const encodedUrl = encodeURI(url);\n\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(postData),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors' as 'cors',\n            credentials: 'include' as 'include'\n        }\n\n        const response = await fetch(encodedUrl, options);\n        const responseData = await response.json();\n\n        if (response.ok) {\n            return responseData\n        }\n        else {\n            throw new Error(JSON.stringify(responseData));\n        }\n\n    }\n\n    async get(url: string) {\n        const encodedUrl = encodeURI(url);\n\n        const options = {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors' as 'cors',\n            credentials: 'include' as 'include'\n        }\n\n        const response = await fetch(encodedUrl, options);\n        const responseData = await response.json();\n\n        if (response.ok) {\n            return responseData\n        }\n        else {\n            throw new Error(JSON.stringify(responseData));\n        }\n    }\n}","\nimport { ClusterMethod, GeometryType, IconType, SRIDS, DefaultGridSizes, DefaultMarkerImageSizes, DefaultMaxZoom } from \"./consts\";\nimport { GeoJSON, Marker, Cluster, Viewport } from \"./geometry\";\nimport {\n  Anycluster,\n  GetKmeansClusterContentRequestData,\n  ClusterRequestData,\n  MapContentCountRequestData,\n  GroupedMapContentRequestData,\n  AreaContentRequestData,\n  Filter,\n  FilterList,\n  NestedFilter,\n  FilterOrNestedFilter,\n  FilterOrNestedFilterList,\n  Modulations,\n} from \"./anycluster\";\n\nconst defaultGridFillColors = {\n  5: \"rgba(255, 192, 203, .5)\",\n  10: \"rgba(240, 128, 128, .5)\",\n  50: \"rgba(255, 127, 80, .5)\",\n  100: \"rgba(255, 165, 0, .5)\",\n  1000: \"rgba(255, 69, 0, .5)\",\n  10000: \"rgba(255, 0 , 0, .5)\",\n};\n\nconst defaultGridStrokeColors = {\n  5: \"pink\",\n  10: \"lightcoral\",\n  50: \"coral\",\n  100: \"orange\",\n  1000: \"orangered\",\n  10000: \"red\",\n};\n\nexport interface AnyclusterClientSettings {\n  srid?: SRIDS // srid of the map\n  kmeansGridSize?: number\n  gridGridSize?: number\n  clusterMethod?: ClusterMethod\n  geometryType?: GeometryType\n  area?: any\n  iconType?: IconType\n  maxZoom?: number,\n  onFinalClick?: Function\n  singlePinImages?: Record<string, string>\n  markerImageSizes?: Record<string, number[]>\n  gridFillColors?: Record<number, string>\n  gridStrokeColors?: Record<number, string>\n  onGotClusters?: () => void\n}\n\nexport class AnyclusterClient {\n\n  srid: SRIDS\n  kmeansGridSize: number\n  gridGridSize: number\n  clusterMethod: ClusterMethod\n  geometryType: GeometryType\n\n  area: GeoJSON | null\n  iconType: IconType\n\n  anycluster: Anycluster\n  markerList: any[]\n  maxZoom: number\n  onFinalClick: Function\n  onGotClusters: Function\n  singlePinImages?: Record<string, string>\n\n  markerImageSizes: Record<string, number[]>\n\n  gridFillColors: Record<number, string>\n  gridStrokeColors: Record<number, string>\n\n  filters: FilterOrNestedFilterList = []\n\n  constructor(public map: any, public apiUrl: string, public markerFolderPath: string, settings: AnyclusterClientSettings) {\n\n    this.map = map;\n    this.apiUrl = apiUrl;\n    this.markerFolderPath = markerFolderPath;\n\n    settings = settings || {};\n\n\n    // settings\n    this.srid = settings.srid ? settings.srid : SRIDS.EPSG4326;\n    this.kmeansGridSize = settings.gridGridSize ? settings.gridGridSize : DefaultGridSizes.kmeans;\n    this.gridGridSize = settings.gridGridSize ? settings.gridGridSize : DefaultGridSizes.grid;\n\n    this.clusterMethod = settings.clusterMethod ? settings.clusterMethod : ClusterMethod.kmeans;\n    this.geometryType = settings.geometryType ? settings.geometryType : GeometryType.viewport;\n\n    this.area = settings.area ? settings.area : null;\n    this.iconType = settings.iconType ? settings.iconType : IconType.rounded;\n\n    this.singlePinImages = settings.singlePinImages ? settings.singlePinImages : {};\n\n    this.markerImageSizes = settings.markerImageSizes ? settings.markerImageSizes : DefaultMarkerImageSizes;\n\n    this.gridFillColors = settings.gridFillColors ? settings.gridFillColors : defaultGridFillColors;\n    this.gridStrokeColors = settings.gridStrokeColors ? settings.gridStrokeColors : defaultGridStrokeColors;\n\n    this.maxZoom = settings.maxZoom ? settings.maxZoom : DefaultMaxZoom;\n    // hooks\n    this.onGotClusters = settings.onGotClusters ? settings.onGotClusters : this._onGotClusters;\n    this.onFinalClick = settings.onFinalClick ? settings.onFinalClick : this._onFinalClick;\n\n\n    if (this.area) {\n      this.setArea(this.area);\n    }\n\n    const gridSize = this.getGridSize();\n    this.anycluster = new Anycluster(this.apiUrl, gridSize, this.srid);\n\n    this.createClusterLayers();\n    this.markerList = [];\n\n    this.startClustering();\n  }\n\n  createClusterLayers(): void {\n    throw new Error(\"NotImplementedError: createClusterLayers\");\n  }\n\n  addArea(geojson: object): void {\n    throw new Error(\"NotImplementedError: addArea\");\n  }\n\n  removeArea(): void {\n    throw new Error(\"NotImplementedError: removeArea\");\n  }\n\n  removeAllMarkers(): void {\n    throw new Error(\"NotImplementedError: removeAllMarkers\");\n  }\n\n  getZoom(): number {\n    throw new Error(\"NotImplementedError: getZoom\");\n  }\n\n  setMap(x: number, y: number, zoom: number): void {\n    throw new Error(\"NotImplementedError: setMap\");\n  }\n\n  getViewport(): Viewport {\n    throw new Error(\"NotImplementedError: setMap\");\n  }\n\n  addMapEventListeners(): void {\n    throw new Error(\"NotImplementedError: addMapEventListeners\");\n  }\n\n  drawMarker(cluster: Cluster): void {\n    throw new Error(\"NotImplementedError: drawMarker\");\n  }\n\n  drawCell(cluster: Cluster): void {\n    throw new Error(\"NotImplementedError: drawCell\");\n  }\n\n  getGridSize(): number {\n    if (this.clusterMethod == ClusterMethod.grid) {\n      return this.gridGridSize;\n    }\n\n    return this.kmeansGridSize;\n  }\n\n  setClusterMethod(clusterMethod: ClusterMethod) {\n\n    if (clusterMethod == ClusterMethod.grid) {\n      this.area = null;\n      this.geometryType = GeometryType.viewport;\n      this.removeArea();\n    }\n\n    this.removeAllMarkers();\n    this.clusterMethod = clusterMethod;\n    const gridSize = this.getGridSize();\n    this.anycluster = new Anycluster(this.apiUrl, gridSize, this.srid);\n    this.markerList = [];\n    this.getClusters(true);\n  }\n\n  setArea(geojson: GeoJSON) {\n\n    this.area = geojson;\n\n    this.removeArea();\n\n    if (geojson == null) {\n      this.geometryType = GeometryType.viewport;\n      this.setClusterMethod(ClusterMethod.kmeans);\n    }\n    else {\n\n      this.addArea(geojson);\n\n      this.geometryType = GeometryType.area;\n\n      this.setClusterMethod(ClusterMethod.kmeans);\n    }\n  }\n\n  getSinglePinImageURL(cluster: Cluster) {\n\n    const pinimg = cluster.pinimg;\n\n    let url = `${this.markerFolderPath}pin_unknown.png`;\n\n    if (this.singlePinImages && pinimg && pinimg in this.singlePinImages) {\n      url = this.singlePinImages[pinimg];\n    }\n\n    return url\n\n  }\n\n  selectPinIcon(cluster: Cluster) {\n\n    const count = cluster.count;\n\n    let markerImageUrl = this.getSinglePinImageURL(cluster);\n    let pinicon = \"1\";\n\n    if (count > 10000) {\n      pinicon = \"10000\";\n    }\n\n    else if (count > 1000) {\n      pinicon = \"1000\";\n    }\n\n    else if (count > 100) {\n      pinicon = \"100\";\n    }\n\n    else if (count > 50) {\n      pinicon = \"50\";\n    }\n\n    else if (count > 10) {\n      pinicon = \"10\";\n    }\n\n    else if (count > 1) {\n      pinicon = \"5\";\n    }\n\n    if (count > 1) {\n      if (this.iconType == IconType.exact) {\n        markerImageUrl = `${this.markerFolderPath}${pinicon}_empty.png`;\n      }\n      else {\n        markerImageUrl = `${this.markerFolderPath}${pinicon}.png`;\n      }\n    }\n\n    const size = this.markerImageSizes[pinicon];\n    let anchor = [Math.round(size[0] / 2), size[1] - 1];\n    let relativeAnchor = [0.5, 1];\n\n    if (count > 1) {\n      anchor = [Math.round((size[0] / 2)), Math.round(size[1] / 2)];\n      relativeAnchor = [0.5, 0.5];\n    }\n\n    const imgObj = {\n      url: markerImageUrl,\n      size: size,\n      anchor: anchor,\n      relativeAnchor: relativeAnchor,\n      popupAnchor: [0, -Math.round(size[1]) + 8]\n    }\n\n    return imgObj;\n\n  }\n\n  // marker can be an openlayers Feature or a L.marker\n  setMarkerProps(marker: any, cluster: Cluster) {\n\n    // add properties required by anycluster\n    marker.x = cluster.center.x;\n    marker.y = cluster.center.y;\n    marker.count = cluster.count;\n\n    if (cluster.hasOwnProperty(\"ids\")) {\n      marker.ids = cluster.ids;\n    }\n\n    if (cluster.hasOwnProperty(\"id\")) {\n      marker.id = cluster.id;\n    }\n\n    if (cluster.hasOwnProperty(\"geojson\")) {\n\n      /*const geojson = {\n          \"type\": \"Feature\",\n          \"count\": cluster.count,\n          \"geometry\": cluster.geojson,\n          \"properties\": {\n              \"count\": cluster.count\n          },\n          \"crs\" : {\n              \"type\" : \"name\",\n              \"properties\" : {\n                  \"name\" : this.srid\n              }\n          }\n      };*/\n\n      marker.geojson = cluster.geojson;\n    }\n\n    return marker;\n\n  }\n\n  markerClickFunction(x: number, y: number) {\n    this.removeAllMarkers();\n    let zoom = this.getZoom();\n    zoom = zoom + 3;\n    this.setMap(x, y, zoom);\n  }\n\n  async onMarkerFinalClick(marker: any) {\n\n    const zoom = this.getZoom();\n    const x = marker.x;\n    const y = marker.y;\n    const ids = marker.ids;\n\n    if (this.clusterMethod == ClusterMethod.kmeans) {\n\n      const postData = {\n        \"geometry_type\": this.geometryType,\n        \"input_srid\": this.srid,\n        \"x\": x,\n        \"y\": y,\n        \"ids\": ids,\n        \"filters\": this.filters\n      } as GetKmeansClusterContentRequestData;\n\n      const data = await this.anycluster.getKmeansClusterContent(zoom, postData);\n\n      this.onFinalClick(marker, data);\n\n    }\n    else if (this.clusterMethod = ClusterMethod.grid) {\n\n      if (marker.count == 1) {\n        const data = await this.anycluster.getDatasetContent(zoom, marker.id);\n        this.onFinalClick(marker, data);\n      }\n      else {\n        const geojson = marker[\"geojson\"];\n        const zoom = this.getZoom();\n        const data = await this.anycluster.getAreaContent(zoom, geojson);\n\n        this.onFinalClick(marker, data);\n      }\n\n    }\n  }\n\n  roundMarkerCount(count: number): number {\n\n    if (count == 1) {\n      count = 1;\n    }\n    else if (count <= 5) {\n      count = 5;\n    }\n    else if (count <= 10) {\n      count = 10;\n    }\n    else if (count <= 50) {\n      count = 50;\n    }\n    else if (count <= 100) {\n      count = 100;\n    }\n    else if (count <= 1000) {\n      count = 1000;\n    }\n    else {\n      count = 10000;\n    }\n\n    return count;\n  }\n\n  getClusterGeometry() {\n    let geoJSON;\n\n    if (this.geometryType == GeometryType.viewport) {\n      const viewport = this.getViewport();\n      geoJSON = this.anycluster.viewportToGeoJSON(viewport);\n    }\n    else if (this.geometryType == GeometryType.area && this.area) {\n      geoJSON = this.area;\n    }\n    else {\n      throw new Error('No cluster geometry found');\n    }\n\n    return geoJSON;\n\n  }\n\n  async getClusters(clearCache = false) {\n\n    const geoJSON = this.getClusterGeometry()\n\n    const postData = {\n      \"output_srid\": this.srid,\n      \"geometry_type\": this.geometryType,\n      \"geojson\": geoJSON,\n      \"clear_cache\": clearCache,\n      \"filters\": this.filters\n    } as ClusterRequestData;\n\n    const zoom = this.getZoom();\n\n    if (this.clusterMethod == ClusterMethod.kmeans) {\n\n      const clusters: Cluster[] = await this.anycluster.getKmeansCluster(zoom, postData);\n\n      if (clusters.length > 0) {\n        clusters.forEach(cluster => {\n          this.drawMarker(cluster);\n        });\n      }\n    }\n    else if (this.clusterMethod == ClusterMethod.grid) {\n      const clusters: Cluster[] = await this.anycluster.getGridCluster(zoom, postData);\n\n      if (clusters.length > 0) {\n        clusters.forEach(cluster => {\n          this.drawCell(cluster);\n        });\n      }\n    }\n    else {\n      throw new Error(`Invalid clusterMethod: ${this.clusterMethod}`);\n    }\n\n    this.onGotClusters();\n\n  }\n\n  startClustering() {\n    this.getClusters(true);\n    this.addMapEventListeners();\n  }\n\n  filtersAreEqual(filter1: FilterOrNestedFilter, filter2: FilterOrNestedFilter): boolean {\n    if ('column' in filter1 && 'column' in filter2) {\n      if (filter1.column == filter2.column && filter1.value == filter2.value && filter1.operator == filter2.operator) {\n        return true;\n      }\n    }\n    // testing with json.stringify is not ideal because {\"a\":1,\"b\":2} === {\"b\":2,\"a\":1} returns false\n    else if (JSON.stringify(filter1) === JSON.stringify(filter2)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // filtering\n  filter(filter: Filter | NestedFilter | FilterOrNestedFilter[], reloadMarkers?: boolean) {\n\n    if (Array.isArray(filter)) {\n      this.filters = filter;\n    }\n    else {\n      this.filters = [filter];\n    }\n    this.postFilterChange(reloadMarkers);\n  }\n\n  addFilter(filter: Filter, reloadMarkers?: boolean) {\n\n    let filterExists = false;\n\n    for (let f = 0; f < this.filters.length; f++) {\n      let existingFilter: FilterOrNestedFilter = this.filters[f];\n\n      if (this.filtersAreEqual(filter, existingFilter)) {\n        filterExists = true;\n        break;\n      }\n\n    }\n\n    if (!filterExists) {\n      this.filters.push(filter);\n    }\n\n    this.postFilterChange(reloadMarkers);\n  }\n\n  addFilters(filtersToAdd: FilterList, reloadMarkers?: boolean) {\n\n    for (let fa = 0; fa < filtersToAdd.length; fa++) {\n      let filter = filtersToAdd[fa];\n      this.addFilter(filter, false);\n    }\n    this.postFilterChange(reloadMarkers);\n  }\n\n  removeFilter(filter: Filter, reloadMarkers?: boolean) {\n\n    for (let f = 0; f < this.filters.length; f++) {\n      let existingFilter: FilterOrNestedFilter = this.filters[f];\n\n      if (this.filtersAreEqual(filter, existingFilter)) {\n        this.filters.splice(f, 1);\n        break;\n      }\n    }\n    this.postFilterChange(reloadMarkers);\n  }\n\n  removeFilters(filtersToRemove: FilterList, reloadMarkers?: boolean) {\n\n    for (let fr = 0; fr < filtersToRemove.length; fr++) {\n\n      let filter = filtersToRemove[fr];\n\n      this.removeFilter(filter, false);\n    }\n\n    this.postFilterChange(reloadMarkers);\n  }\n\n  resetFilters(reloadMarkers?: boolean) {\n    this.filters = [];\n    this.postFilterChange(reloadMarkers);\n  }\n\n  postFilterChange(reloadMarkers?: boolean) {\n    if (reloadMarkers != false) {\n      reloadMarkers = true;\n    }\n    if (reloadMarkers == true) {\n      this.removeAllMarkers();\n      this.getClusters(true);\n    }\n  }\n\n\n  /**\n   * method for getting the unaggregated, paginated content of the map\n   */\n  async getMapContents(limit?: number, offset?: number) {\n    const geoJSON = this.getClusterGeometry();\n    const zoom = this.getZoom();\n\n    const postData = {\n      \"output_srid\": this.srid,\n      \"geometry_type\": GeometryType.area,\n      \"geojson\": geoJSON,\n      \"clear_cache\": false,\n      \"filters\": this.filters,\n      \"limit\": limit,\n      \"offset\": offset,\n    } as AreaContentRequestData;\n\n    const data = this.anycluster.getAreaContent(zoom, postData);\n\n    return data;\n  }\n\n  /**\n   * methods for getting counts of objects on the current map / geometry\n   */\n\n  async getMapContentCount(modulations?: Modulations) {\n\n    const geoJSON = this.getClusterGeometry()\n\n    const postData = {\n      \"output_srid\": this.srid,\n      \"geometry_type\": this.geometryType,\n      \"geojson\": geoJSON,\n      \"clear_cache\": true,\n      \"filters\": this.filters,\n      \"modulations\": modulations,\n    } as MapContentCountRequestData;\n\n    const zoom = this.getZoom();\n\n    const data = await this.anycluster.getMapContentCount(zoom, postData);\n\n    return data;\n  }\n\n  async getGroupedMapContents(groupBy: string) {\n\n    const geoJSON = this.getClusterGeometry()\n\n    const postData = {\n      \"output_srid\": this.srid,\n      \"geometry_type\": this.geometryType,\n      \"geojson\": geoJSON,\n      \"clear_cache\": true,\n      \"filters\": this.filters,\n      \"group_by\": groupBy,\n    } as GroupedMapContentRequestData;\n\n    const zoom = this.getZoom();\n\n    const data = await this.anycluster.getGroupedMapContents(zoom, postData);\n\n    return data;\n\n  }\n\n  // hooks\n  _onFinalClick(marker: Marker, data: any) {\n    alert(JSON.stringify(data));\n  }\n\n  _onGotClusters() { }\n\n}","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n"],"names":[],"version":3,"file":"anycluster-openlayers.js.map"}